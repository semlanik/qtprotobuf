/*
 * MIT License
 *
 * Copyright (c) 2019 Alexey Edelev <semlanik@gmail.com>
 *
 * This file is part of QtProtobuf project https://git.semlanik.org/semlanik/qtprotobuf
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this
 * software and associated documentation files (the "Software"), to deal in the Software
 * without restriction, including without limitation the rights to use, copy, modify,
 * merge, publish, distribute, sublicense, and/or sell copies of the Software, and
 * to permit persons to whom the Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies
 * or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
 * PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
 * FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#pragma once //QProtobufObject

#include "qabstractprotobufserializer.h"
#include "qprotobufmetaobject.h"
#include <unordered_map>

/*!
 * \defgroup QtProtobuf
 * \brief Qt framework wrappers and bindings for protobuf objects
 */

/*!
 * \ingroup QtProtobuf
 * \def Q_DECLARE_PROTOBUF_SERIALIZERS(T)
 *      Defines serializers for type T inherited of QObject. Is part of autogenerated by qtprogobufgenerator classes
 */

#define Q_DECLARE_PROTOBUF_SERIALIZERS(T)\
    public:\
        QByteArray serialize(QtProtobuf::QAbstractProtobufSerializer *serializer) const { Q_ASSERT_X(serializer != nullptr, "QProtobufObject", "Serializer is null"); return serializer->serialize<T>(this); }\
        void deserialize(QtProtobuf::QAbstractProtobufSerializer *serializer, const QByteArray &array) { Q_ASSERT_X(serializer != nullptr, "QProtobufObject", "Serializer is null"); serializer->deserialize<T>(this, array); }\
    private:

/*!
 * \ingroup QtProtobuf
 * \def Q_PROTOBUF_OBJECT
 *      Declares propertyOrdering for type T inherited of QObject. Is part of autogenerated by qtprogobufgenerator classes
 */

#define Q_PROTOBUF_OBJECT\
    public:\
        static const QtProtobuf::QProtobufPropertyOrdering propertyOrdering;\
        static const QtProtobuf::QProtobufMetaObject protobufMetaObject;\
    private:
